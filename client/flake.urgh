{
  description = "Flake for client";

  inputs = {
    flake-parts.url = "github:hercules-ci/flake-parts";
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    systems.url = "github:nix-systems/default";
    #devenv.url = "github:cachix/devenv";
    android.url = "github:tadfisher/android-nixpkgs";
    #fenix = {
    #  url = "github:nix-community/fenix";
    #  inputs = { nixpkgs.follows = "nixpkgs"; };
    #};
  };

  outputs = inputs@{ flake-parts, nixpkgs, systems, android, ... }:
    flake-parts.lib.mkFlake { inherit inputs; } {
      imports = [
        #devenv.flakeModule
      ];
      systems = import systems;
      perSystem = { config, self', inputs', pkgs, system, lib, ... }: {
        devShells.default = let
          pkgs = import nixpkgs {
            inherit system;
            config.allowUnfree = true;
          };
          android-sdk = android.sdk.${system} (sdkPkgs: with sdkPkgs; [
            build-tools-33-0-1
            cmdline-tools-latest
            platform-tools
            platforms-android-21
            ndk-25-1-8937393
          ]);
        in {
          default = (with pkgs; buildFHSUserEnv {
            name = "lingolessons";
            profile = ''
              export ANDROID_SDK_ROOT="${android-sdk}/share/android-sdk"
              export JAVA_HOME="${jdk17.home}"
            '';
            targetPkgs = pkgs: with pkgs; [
              android-studio
              android-sdk
            ];
          }).env;
        };



        #_module.args.pkgs = import inputs.nixpkgs {
        #  inherit system;
        #  config.allowUnfree = true;
        #};
        #devenv.shells.default = {
        #  imports = [ 
        #    ./nix/android.nix
        #    ./nix/rust.nix
        #  ];
        #};
      };
    };
}
